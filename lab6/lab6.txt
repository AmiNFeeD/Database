anfd@ANFD-Pro lab6 % psql -U anfd -d postgres
psql (14.19 (Homebrew))
Type "help" for help.

postgres=# CREATE TABLE departments (
postgres(# dept_id SERIAL PRIMARY KEY,
postgres(# dept_name VARCHAR (100) NOT NULL,
postgres(# location VARCHAR (100)
postgres(# );
CREATE TABLE
postgres=# CREATE TABLE employees (
postgres(# emp_id SERIAL PRIMARY KEY,
postgres(# first_name VARCHAR(50) NOT NULL,
postgres(# last_name VARCHAR (50) NOT NULL,
postgres(# dept_id INTEGER NOT NULL,
postgres(# FOREIGN KEY (dept_id) REFERENCES departments (dept_id) ON DELETE RESTRICT
postgres(# );
CREATE TABLE
postgres=# CREATE TABLE users (
postgres(# user_id SERIAL PRIMARY KEY,
postgres(# username VARCHAR (50) UNIQUE NOT NULL,
postgres(# email VARCHAR (100) UNIQUE NOT NULL,
postgres(# created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
postgres(# );
CREATE TABLE
postgres=# CREATE TABLE user_profiles (
postgres(# profile_id SERIAL PRIMARY KEY,
postgres(# user_id INTEGER UNIQUE NOT NULL,
postgres(# first_name VARCHAR (50),
postgres(# last_name VARCHAR (50),
postgres(# bio TEXT,
postgres(# profile_picture_url VARCHAR (255),
postgres(# FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE
postgres(# );
CREATE TABLE
postgres=# CREATE TABLE students (
postgres(# student_id SERIAL PRIMARY KEY,
postgres(# first_name VARCHAR (50) NOT NULL,
postgres(# last_name VARCHAR (50) NOT NULL,
postgres(# email VARCHAR (100) UNIQUE,
postgres(# enrollment_date DATE DEFAULT CURRENT_DATE
postgres(# )ж
postgres-# CREATE TABLE students (
postgres(# student_id SERIAL PRIMARY KEY,
postgres(# first_name VARCHAR (50) NOT NULL,
postgres(# last_name VARCHAR (50) NOT NULL,
postgres(# email VARCHAR (100) UNIQUE,
postgres(# enrollment_date DATE DEFAULT CURRENT_DATE
postgres(# );
ERROR:  syntax error at or near "ж"
LINE 7: )ж
         ^
postgres=# DROP TABLE students
postgres-# CREATE TABLE students (
postgres(# student_id SERIAL PRIMARY KEY,
postgres(# first_name VARCHAR (50) NOT NULL,
postgres(# last_name VARCHAR (50) NOT NULL,
postgres(# email VARCHAR (100) UNIQUE,
postgres(# enrollment_date DATE DEFAULT CURRENT_DATE
postgres(# );
ERROR:  syntax error at or near "CREATE"
LINE 2: CREATE TABLE students (
        ^
postgres=# CREATE TABLE students (
    student_id SERIAL PRIMARY KEY,
    first_name VARCHAR (50) NOT NULL,
    last_name VARCHAR (50) NOT NULL,
    email VARCHAR (100) UNIQUE,
    enrollment_date DATE DEFAULT CURRENT_DATE
);
ERROR:  relation "students" already exists
postgres=# DROP TABLE students
postgres-# CREATE TABLE students (
postgres(# student_id SERIAL PRIMARY KEY,
postgres(# first_name VARCHAR (50) NOT NULL,
postgres(# last_name VARCHAR (50) NOT NULL,
postgres(# email VARCHAR (100) UNIQUE,
postgres(# enrollment_date DATE DEFAULT CURRENT_DATE
postgres(# );
ERROR:  syntax error at or near "CREATE"
LINE 2: CREATE TABLE students (
        ^
postgres=# DROP TABLE students;
DROP TABLE
postgres=# CREATE TABLE students (
postgres(# student_id SERIAL PRIMARY KEY,
postgres(# first_name VARCHAR (50) NOT NULL,
postgres(# last_name VARCHAR (50) NOT NULL,
postgres(# email VARCHAR (100) UNIQUE,
postgres(# enrollment_date DATE DEFAULT CURRENT_DATE
postgres(# );
CREATE TABLE
postgres=# CREATE TABLE courses (
postgres(# course_id SERIAL PRIMARY KEY,
postgres(# course_code VARCHAR(10) UNIQUE NOT NULL,
postgres(# course_name VARCHAR(100) NOT NULL,
postgres(# credits INTEGER NOT NULL,
postgres(# instructor VARCHAR (100)
postgres(# );
CREATE TABLE
postgres=# CREATE TABLE student_enrollments (
postgres(# enrollment_id SERIAL PRIMARY KEY,
postgres(# student_id INTEGER NOT NULL,
postgres(# course_id INTEGER NOT NULL,
postgres(# enrollment_date DATE DEFAULT CURRENT_DATE,
postgres(# grade CHAR (2),
postgres(# FOREIGN KEY (student_id) REFERENCES students (student_id) ON DELETE CASCADE,
postgres(# FOREIGN KEY (course_id) REFERENCES courses (course_id) ON DELETE CASCADE,
postgres(# UNIQUE (student_id, course_id)
postgres(# );
CREATE TABLE
postgres=# INSERT INTO departments (dept_name, location) VALUES
postgres-# ('Engineering', 'Building A');
INSERT 0 1
postgres=# INSERT INTO employees (first_name, last_name, dept_id) VALUES
postgres-# ('John', 'Smith', 1);
INSERT 0 1
postgres=# INSERT INTO employees (first_name, last_name, dept_id) VALUES
postgres-# ('Jane', 'Doe', 99);
ERROR:  insert or update on table "employees" violates foreign key constraint "employees_dept_id_fkey"
DETAIL:  Key (dept_id)=(99) is not present in table "departments".
postgres=# DELETE FROM departments WHERE dept_id = 1;
ERROR:  update or delete on table "departments" violates foreign key constraint "employees_dept_id_fkey" on table "employees"
DETAIL:  Key (dept_id)=(1) is still referenced from table "employees".
postgres=# DROP TABLE employees;
DROP TABLE
postgres=# CREATE TABLE employees (
postgres(# emp_id SERIAL PRIMARY KEY,
postgres(# first_name VARCHAR (50) NOT NULL,
postgres(# last_name VARCHAR (50) NOT NULL,
postgres(# dept_id INTEGER REFERENCES departments (dept_id) ON DELETE CASCADE
postgres(# );
CREATE TABLE
postgres=# INSERT INTO employees (first_name, last_name, dept_id) VALUES
postgres-# ('John', 'Smith', 1);
INSERT 0 1
postgres=# DELETE FROM departments WHERE dept_id = 1;
DELETE 1
postgres=# 
